<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nodejs安装</title>
      <link href="/posts/15706.html"/>
      <url>/posts/15706.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-Node-js的概述"><a href="#一-Node-js的概述" class="headerlink" title="一. Node.js的概述"></a>一. Node.js的概述</h2><p>Node.js 不是一门编程语言，它是一个执行 JavaScript 代码的工具。学过Java的可以把安装Node.js看作安装JDK。</p><p>HTML页面中可以在<script></script> 中写JavaScript代码，然后在浏览器中运行。</p><p>Node.js 可以让JavaScript代码在一个单独的文件中编辑并在本地电脑上运行，如图所示</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202211222147913.png"></p><p>为什么浏览器和 Node.js 都可以运行 JavaScript</p><ul><li><p>因为浏览器和 Node.js 都内置了 JavaScript V8 Engine。</p></li><li><p>它可以将 JavaScript 代码编译为计算机能够识别的机器码。</p></li><li><p>JavaScript 运行在浏览器中我们就叫它客户端 JavaScript。</p></li><li><p>JavaScript 运行在 Node.js 中我们就叫它服务器端 JavaScript。</p></li></ul><p>我们在学习完JavaScript后，学习Node.js，更多的是学习其中的<strong>内置模块</strong>的使用，也就是其中Node API的使用</p><p>nodejs官方模块有：1、path模块，用于处理文件路径；2、until模块；3、fs模块，文件操作系统的API；4、events模块；5、http模块；6、jade模块；7、Express模块。</p><p>总结：nodejs是一个用来运行JavaScript的工具，我们可以通过调用其中的内置模块，来完成操作本地电脑中的文件，开启一个server服务等操作。</p><h2 id="二-安装环境"><a href="#二-安装环境" class="headerlink" title="二. 安装环境"></a>二. 安装环境</h2><p> 本人的安装环境位 Windows 10 64位</p><p>nodejs下载官网：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p>下载LTS版本 ，即长期支持版本</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202211222111757.png"></p><p>点击下载到本地即可</p><h2 id="三-安装过程"><a href="#三-安装过程" class="headerlink" title="三. 安装过程"></a>三. 安装过程</h2><ul><li>双击安装包，一直点击next</li><li>在选择安装位置时，可以点击change选择自己想要放置的位置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202211222117273.png"></p><ul><li>一直next，直至安装完成</li></ul><h3 id="查看是否安装成功"><a href="#查看是否安装成功" class="headerlink" title="查看是否安装成功"></a>查看是否安装成功</h3><p>打开命令提示符面板</p><ul><li>方法1：windows+R</li></ul><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071525091.png"></p><ul><li>方法2：输入cmd后回车</li></ul><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071524599.png"></p><p>输入</p><pre class="line-numbers language-none"><code class="language-none">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071524117.png"></p><h3 id="查看环境变量（可以不操作）"><a href="#查看环境变量（可以不操作）" class="headerlink" title="查看环境变量（可以不操作）"></a>查看环境变量（可以不操作）</h3><p>node 的命令在电脑的任意位置都可以使用，像之前使用的node a.js，可我们明明没有做任何的配置，我们只是安装了nodejs，这是为什么呢？</p><p>在学习java过程中，第一步安装jdk的过程中我们需要配置环境变量之后才可以使用java命令。nodejs也是如此，nodejs的环境变量在安装过程中已经自动的配置好了。</p><p>我们可以这样查看环境变量</p><p>右击此电脑，点击属性</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071538013.png"></p><p>点击右上角的高级系统设置</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071539907.png"></p><p>点击环境变量</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071539653.png"></p><p>找到Path 双击打开</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071540643.png"></p><p>可以看到安装好的nodejs的路径在已经被加入了</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071542205.png"></p><p>验证：将这一条语句删除，然后再使用node -v命令，==修改后需要一直确定，测试时需要重新开一个命令提示符窗口==如图所示</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071548804.png"></p><p>但是在安装位置的目录下仍然可以使用，我的目录为D:\node\nodejs</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071550816.png"></p><p>点击新建输入nodejs的路径添加之后 node 命令又可以在任意位置使用了（==把新添加的路径放在path中最后一个即可，不要将新添加的放在第一个的位置==）</p><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071600508.png"></p><h2 id="四-修改全局模块路径和缓存路径（可选，大家自行选择是否修改）"><a href="#四-修改全局模块路径和缓存路径（可选，大家自行选择是否修改）" class="headerlink" title="四. 修改全局模块路径和缓存路径（可选，大家自行选择是否修改）"></a>四. 修改全局模块路径和缓存路径（可选，大家自行选择是否修改）</h2><p>参照<a href="https://blog.csdn.net/chanyeolchichi/article/details/121348541">https://blog.csdn.net/chanyeolchichi/article/details/121348541</a></p><h2 id="五-NPM-简单介绍"><a href="#五-NPM-简单介绍" class="headerlink" title="五. NPM 简单介绍"></a>五. NPM 简单介绍</h2><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：</p><ul><li><p>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</p></li><li><p>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</p></li><li><p>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</p></li></ul><p>npm -v 来查看是否安装成功</p><pre class="line-numbers language-none"><code class="language-none">npm -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071618639.png"></p><p>因为 npm 是默认是从国外的NPM服务器下载，所以速度较慢，我们可以使用下面的命令改为使用淘宝镜像：</p><pre class="line-numbers language-none"><code class="language-none">npm install -g cnpm --registry=https://registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改为淘宝镜像后可以使用 cnpm命令了</p><pre class="line-numbers language-none"><code class="language-none">cnpm -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yangqifeng01/picture/blog/202212071629037.png"></p><p>被遮盖的地方是个人的windows 的用户名，每个人都是不同的</p><h3 id="NPM-常用命令"><a href="#NPM-常用命令" class="headerlink" title="NPM 常用命令"></a>NPM 常用命令</h3><pre class="line-numbers language-none"><code class="language-none">node -v  查看 Node 安装版本npm -v      查看 npm 安装版本npm help &lt;command&gt;  查看 npm 命令列表npm -l  查看各个命令的用法 npm get registry  查看 npm 镜像地址npm config set registry=http://registry.npm.taobao.org  修改 npm 镜像地址(如淘宝)npm config set proxy=http://ip:port  设置代理npm config list [-L]  查看 npm 的配置list -l 可以看到)npm config del key  删除 npm 配置 npm view gulp versions 查看安装包历史版本npm info gulp  查看远程安装包的详细信息 npm install gulp   当前目录下安装指定包(默认安装最新版本)npm install -g gulp@4.0.1   全局安装指定版本的包npm install gulp -S    将安装包信息加入到 package.json 中的 dependencies 下(生产阶段的依赖，默认如此)npm install gulp -D  将安装包信息加入到 package.json 中的 devDependencies 下(开发阶段的依赖)npm install gulp -O  将安装包信息加入到 package.json 中的 optionalDependencies 下(可选阶段的依赖) npm root [-g]  查看包的安装路径(输出node_modules的路径) npm list  查看当前目录下已安装的包npm list -g --depth 0  列出全局安装的模块 带上[--depth 0] 不深入到包的支点 更简洁npm ls   查看当前目录下已安装的包npm list -g  查看全局已安装的包npm ls -g  查看全局已安装的包 npm outdated  查看当前目录下的所有的包是否存在新版本(-g表示全局)npm outdated -g gulp  查看全局指定的包是否存在新版本npm update gulp  更新本地指定的包npm update -g   更新全局所有的包(-g表示全局，不指定具体包时，更新全部) npm uninstall gulp  卸载当前目录下的指定的包(-g 卸载全局依赖) --初始化生成一个新的 package.json 文件。它会向用户提问一系列问题，如果觉得不用修改默认配置，一路回车就可以了。--尾缀带-f（代表force）、-y（代表yes），则跳过提问阶段，直接生成一个新的 package.json 文件。npm init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + GitHub个人博客搭建</title>
      <link href="/posts/51385.html"/>
      <url>/posts/51385.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-搭建说明"><a href="#一-搭建说明" class="headerlink" title="一.搭建说明"></a>一.搭建说明</h1><p>环境为windows 10 64位</p><h1 id="二-安装搭建工具"><a href="#二-安装搭建工具" class="headerlink" title="二. 安装搭建工具"></a>二. 安装搭建工具</h1><h2 id="1-Nodejs下载安装"><a href="#1-Nodejs下载安装" class="headerlink" title="1.Nodejs下载安装"></a><a href="https://nodejs.org/en/download/">1.Nodejs下载安装</a></h2><h2 id="2-Git下载安装"><a href="#2-Git下载安装" class="headerlink" title="2.Git下载安装"></a><a href="https://git-scm.com/download/win">2.Git下载安装</a></h2><h2 id="3-hexo下载"><a href="#3-hexo下载" class="headerlink" title="3.hexo下载"></a>3.hexo下载</h2>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
